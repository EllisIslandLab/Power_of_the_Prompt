"use client"

import { useState, useEffect, useRef, useCallback } from "react"
import { Button } from "@/components/ui/button"
import Link from "next/link"
import { ChevronLeft, ChevronRight, X, ExternalLink, Star } from "lucide-react"

export function SiteSamples() {
  const [activeCategory, setActiveCategory] = useState("All")
  const [selectedSample, setSelectedSample] = useState<any>(null)
  const [rotation, setRotation] = useState(0) // Current wheel rotation in degrees
  const [isDragging, setIsDragging] = useState(false)
  const [lastMouseX, setLastMouseX] = useState(0)
  const [velocity, setVelocity] = useState(0)
  const [isClient, setIsClient] = useState(false)
  const wheelRef = useRef<HTMLDivElement>(null)
  const animationRef = useRef<number | null>(null)

  // Handle client-side rendering
  useEffect(() => {
    setIsClient(true)
  }, [])

  const samples = [
    {
      title: "E-commerce Fashion Store",
      description: "Modern online boutique with advanced filtering, wishlist, and seamless checkout",
      tech: "Next.js, Stripe, Prisma, PostgreSQL",
      features: ["Product Filtering", "Shopping Cart", "Payment Processing", "Order Management", "Customer Reviews"],
      image: "/api/placeholder/400/300",
      liveUrl: "#",
      category: "E-commerce",
      testimonial: "I launched my store and made $10K in the first month. Complete code ownership means no monthly fees!",
      studentName: "Sarah M.",
      isFeatured: false
    },
    {
      title: "Winchester Therapy Services",
      description: "HIPAA-compliant therapy practice website with secure patient portal and appointment booking",
      tech: "Next.js, TypeScript, HIPAA Compliance",
      features: ["Secure Patient Portal", "HIPAA Compliance", "Online Booking", "Therapy Resources", "Insurance Verification"],
      image: "/api/placeholder/400/300",
      liveUrl: "https://winchestertherapyservices.com",
      category: "Service Business",
      testimonial: "My brother helped me create a professional therapy website that's fully HIPAA compliant and secure.",
      studentName: "Winchester T.",
      isFeatured: true
    },
    {
      title: "Creative Portfolio",
      description: "Stunning portfolio showcasing creative work with smooth animations and project galleries",
      tech: "Next.js, Framer Motion, Tailwind",
      features: ["Project Galleries", "Contact Forms", "Smooth Animations", "SEO Optimized", "Mobile Responsive"],
      image: "/api/placeholder/400/300",
      liveUrl: "#",
      category: "Portfolio",
      testimonial: "My portfolio helped me land 3 new clients within weeks of launching. The animations are incredible!",
      studentName: "Jessica L.",
      isFeatured: false
    },
    {
      title: "Consulting Agency",
      description: "Professional business website with service showcases and lead generation forms",
      tech: "Next.js, TypeScript, CMS Integration",
      features: ["Service Pages", "Case Studies", "Lead Forms", "Blog System", "Analytics Dashboard"],
      image: "/api/placeholder/400/300",
      liveUrl: "#",
      category: "Service Business",
      testimonial: "The lead generation features tripled my inquiries. Best investment I've made for my business.",
      studentName: "David K.",
      isFeatured: false
    },
    {
      title: "Restaurant Chain",
      description: "Multi-location restaurant website with online ordering and reservation system",
      tech: "Next.js, Stripe, Google Maps API",
      features: ["Online Ordering", "Reservation System", "Location Finder", "Menu Management", "Reviews"],
      image: "/api/placeholder/400/300",
      liveUrl: "#",
      category: "E-commerce",
      testimonial: "Online orders increased 300% after launch. The system paid for itself in the first week.",
      studentName: "Maria G.",
      isFeatured: false
    },
    {
      title: "Tech Startup",
      description: "Modern SaaS landing page with product demos and subscription management",
      tech: "Next.js, Stripe, Analytics, API Integration",
      features: ["Product Demos", "Subscription Billing", "User Dashboard", "Analytics", "API Documentation"],
      image: "/api/placeholder/400/300",
      liveUrl: "#",
      category: "Service Business",
      testimonial: "Launched our MVP in record time. The code quality impressed our investors.",
      studentName: "Alex T.",
      isFeatured: false
    },
    {
      title: "Non-Profit Organization",
      description: "Impactful charity website with donation system and volunteer management",
      tech: "Next.js, PayPal API, Volunteer Portal",
      features: ["Donation System", "Volunteer Portal", "Event Calendar", "Impact Tracking", "Newsletter"],
      image: "/api/placeholder/400/300",
      liveUrl: "#",
      category: "Non-Profit",
      testimonial: "Donations increased 150% with our new site. The volunteer portal saves us hours weekly.",
      studentName: "Linda C.",
      isFeatured: false
    },
    {
      title: "Photography Studio",
      description: "Elegant portfolio with client galleries, booking system, and print sales",
      tech: "Next.js, Image Optimization, Stripe",
      features: ["Client Galleries", "Booking System", "Print Sales", "Image Protection", "Portfolio Showcase"],
      image: "/api/placeholder/400/300",
      liveUrl: "#",
      category: "Portfolio",
      testimonial: "Bookings doubled and print sales are through the roof. The client galleries are a game-changer.",
      studentName: "Robert P.",
      isFeatured: false
    }
  ]

  const categories = ["All", "E-commerce", "Service Business", "Portfolio", "Non-Profit"]
  
  const filteredSamples = activeCategory === "All" 
    ? samples 
    : samples.filter(sample => sample.category === activeCategory)

  // Calculate spacing for horizontal wheel
  const itemWidth = 320 // Width of each card
  const spacing = 360 // Space between items
  const totalItems = filteredSamples.length

  // Physics-based momentum animation
  const animateWithMomentum = useCallback(() => {
    if (Math.abs(velocity) > 0.1) {
      setRotation(prev => prev + velocity)
      setVelocity(prev => prev * 0.95) // Friction/deceleration
      animationRef.current = requestAnimationFrame(animateWithMomentum)
    }
  }, [velocity])

  useEffect(() => {
    if (velocity !== 0) {
      animationRef.current = requestAnimationFrame(animateWithMomentum)
    }
    return () => {
      if (animationRef.current) {
        cancelAnimationFrame(animationRef.current)
      }
    }
  }, [velocity, animateWithMomentum])

  // Manual rotation controls
  const rotateWheel = (direction: 'left' | 'right') => {
    const rotationChange = direction === 'left' ? -spacing : spacing
    setRotation(prev => prev + rotationChange)
    setVelocity(rotationChange * 0.2) // Add some momentum
  }

  // Individual arrow hover states
  const [leftArrowHover, setLeftArrowHover] = useState(false)
  const [rightArrowHover, setRightArrowHover] = useState(false)

  // Mouse drag functionality
  const handleMouseDown = (e: React.MouseEvent) => {
    setIsDragging(true)
    setLastMouseX(e.clientX)
    setVelocity(0)
  }

  const handleMouseMove = useCallback((e: MouseEvent) => {
    if (isDragging) {
      const deltaX = e.clientX - lastMouseX
      const rotationChange = deltaX * 0.5 // Sensitivity
      setRotation(prev => prev + rotationChange)
      setVelocity(deltaX * 0.3) // Store velocity for momentum
      setLastMouseX(e.clientX)
    }
  }, [isDragging, lastMouseX])

  const handleMouseUp = useCallback(() => {
    setIsDragging(false)
  }, [])

  useEffect(() => {
    if (isDragging) {
      document.addEventListener('mousemove', handleMouseMove)
      document.addEventListener('mouseup', handleMouseUp)
    }
    
    return () => {
      document.removeEventListener('mousemove', handleMouseMove)
      document.removeEventListener('mouseup', handleMouseUp)
    }
  }, [isDragging, handleMouseMove, handleMouseUp])

  // Reset rotation when category changes
  useEffect(() => {
    setRotation(0)
    setVelocity(0)
  }, [activeCategory])

  return (
    <section id="site-samples" className="py-24 bg-muted/30">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-3xl sm:text-4xl lg:text-5xl font-bold text-foreground mb-6">
            Websites Our <span className="text-primary">Students Built</span>
          </h2>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto mb-8">
            Real websites, real results. See what our students accomplished with modern web technologies and complete code ownership.
          </p>
          
          {/* Category Tabs */}
          <div className="flex justify-center mb-8">
            <div className="inline-flex bg-muted rounded-xl p-1">
              {categories.map((category) => (
                <button
                  key={category}
                  onClick={() => {
                    setActiveCategory(category)
                  }}
                  className={`px-6 py-3 rounded-lg text-sm font-medium transition-all ${
                    activeCategory === category
                      ? "bg-background text-foreground shadow-sm"
                      : "text-muted-foreground hover:text-foreground"
                  }`}
                >
                  {category}
                </button>
              ))}
            </div>
          </div>
        </div>
      </div>
        
      {/* Art Gallery Carousel - Full Screen Width */}
      <div className="relative h-96 overflow-hidden bg-gradient-to-b from-slate-900 via-slate-800 to-slate-900">
          {/* Gallery Floor - Full Width with Three-Zone Lighting */}
          <div className="absolute bottom-0 left-0 right-0 h-12 bg-gradient-to-r from-slate-800/60 via-slate-600 to-slate-800/60" />
          
          {/* Gallery Ceiling - Full Width with Three-Zone Lighting */}
          <div className="absolute top-0 left-0 right-0 h-12 bg-gradient-to-r from-slate-800/60 via-slate-600 to-slate-800/60" />
          
          {/* Left Hover Zone & Arrow */}
          <div 
            className="absolute left-0 top-0 w-32 h-full z-10 cursor-pointer flex items-center"
            onMouseEnter={() => setLeftArrowHover(true)}
            onMouseLeave={() => setLeftArrowHover(false)}
          >
            <button
              onClick={() => rotateWheel('left')}
              className={`ml-2 transition-all duration-500 bg-black/80 backdrop-blur-sm border border-slate-600 hover:bg-black/90 rounded-xl shadow-2xl h-32 w-12 flex items-center justify-center group ${
                leftArrowHover ? 'opacity-90' : 'opacity-0'
              }`}
              disabled={filteredSamples.length <= 1}
            >
              <ChevronLeft className="h-8 w-8 text-slate-300 group-hover:text-white transition-colors" />
            </button>
          </div>

          {/* Right Hover Zone & Arrow */}
          <div 
            className="absolute right-0 top-0 w-32 h-full z-10 cursor-pointer flex items-center justify-end"
            onMouseEnter={() => setRightArrowHover(true)}
            onMouseLeave={() => setRightArrowHover(false)}
          >
            <button
              onClick={() => rotateWheel('right')}
              className={`mr-2 transition-all duration-500 bg-black/80 backdrop-blur-sm border border-slate-600 hover:bg-black/90 rounded-xl shadow-2xl h-32 w-12 flex items-center justify-center group ${
                rightArrowHover ? 'opacity-90' : 'opacity-0'
              }`}
              disabled={filteredSamples.length <= 1}
            >
              <ChevronRight className="h-8 w-8 text-slate-300 group-hover:text-white transition-colors" />
            </button>
          </div>

          {/* Horizontal Wheel Container */}
          <div 
            className="w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing overflow-hidden"
            onMouseDown={handleMouseDown}
          >
            <div
              ref={wheelRef}
              className="relative flex items-center transition-transform duration-300 ease-out"
              style={{
                transform: `translateX(${rotation}px)`,
                width: `${totalItems * spacing}px`,
              }}
            >
              {filteredSamples.map((sample, index) => {
                // Calculate position relative to center (fixed centering)
                const itemPosition = index * spacing + rotation + (spacing / 2)
                const centerPosition = isClient ? window.innerWidth / 2 : 640
                const distanceFromCenter = Math.abs(itemPosition - centerPosition)
                
                // Calculate scale based on distance from center (no opacity changes)
                const maxDistance = spacing * 1.5
                const normalizedDistance = Math.min(distanceFromCenter / maxDistance, 1)
                const scale = Math.max(0.7, 1 - normalizedDistance * 0.3)
                
                // Determine if item is in center for spotlight
                const isCenter = distanceFromCenter < spacing / 3
                
                return (
                  <div
                    key={sample.title}
                    className="absolute transition-all duration-500 ease-out"
                    style={{
                      left: `${index * spacing}px`,
                      transform: `translateX(-50%) scale(${scale})`,
                      zIndex: Math.round((1 - normalizedDistance) * 10),
                    }}
                  >
                    {/* Gallery Spotlight for Center Item */}
                    {isCenter && (
                      <div 
                        className="absolute inset-0 -inset-8 rounded-full blur-xl z-0"
                        style={{
                          background: 'radial-gradient(circle, rgba(251, 191, 36, 0.2) 0%, rgba(245, 158, 11, 0.1) 50%, transparent 100%)'
                        }}
                      />
                    )}
                    
                    <div 
                      className={`group relative overflow-hidden bg-black border-2 shadow-2xl cursor-pointer transition-all duration-500 ${
                        isCenter 
                          ? 'border-amber-400/30 shadow-amber-200/20' 
                          : 'border-slate-600 shadow-black/40'
                      }`}
                      style={{ 
                        width: `${itemWidth}px`,
                        borderRadius: '8px', // Flat TV screen look
                      }}
                      onClick={() => setSelectedSample(sample)}
                    >
                      {/* Flat Screen TV Bezel */}
                      <div className="absolute inset-0 bg-gradient-to-br from-slate-800 via-slate-900 to-black p-2">
                        <div className="w-full h-full bg-gradient-to-br from-slate-100 to-slate-300 rounded-sm overflow-hidden">
                          <div className="aspect-video bg-gradient-to-br from-blue-50 to-blue-100 relative">
                            {sample.title === "Winchester Therapy Services" ? (
                              <iframe 
                                src="https://winchestertherapyservices.com" 
                                className="w-full h-full border-0 rounded-sm"
                                title="Winchester Therapy Services Website Preview"
                                loading="lazy"
                              />
                            ) : (
                              <div className="absolute inset-0 flex items-center justify-center text-slate-600">
                                <div className="text-center">
                                  <div className={`${isCenter ? 'text-5xl' : 'text-4xl'} mb-2 transition-all duration-300`}>🖥️</div>
                                  <div className="text-sm font-medium">{sample.category}</div>
                                </div>
                              </div>
                            )}
                            
                            {/* Category Tag */}
                            <div className="absolute top-3 right-3">
                              <span className="text-xs bg-slate-800/80 text-white px-2 py-1 rounded-full font-medium">
                                {sample.category}
                              </span>
                            </div>
                            
                            {/* Featured Badge */}
                            {sample.isFeatured && (
                              <div className="absolute top-3 left-3">
                                <div className="flex items-center gap-1">
                                  <Star className="h-3 w-3 text-yellow-500 fill-current" />
                                  <span className="text-xs bg-yellow-500 text-black px-2 py-1 rounded-full font-medium">Featured</span>
                                </div>
                              </div>
                            )}
                            
                            {/* Hover Overlay */}
                            <div className="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-all duration-300" />
                            
                            {/* Testimonial Bar - Only on center items */}
                            {isCenter && (
                              <div className="absolute bottom-0 left-0 right-0 transform translate-y-full group-hover:translate-y-0 transition-transform duration-300 ease-out">
                                <div className="bg-gradient-to-t from-black/95 via-black/80 to-transparent p-4">
                                  <h4 className="text-white font-semibold text-sm mb-1">{sample.title}</h4>
                                  <blockquote className="text-white/90 text-xs italic mb-2 leading-relaxed">
                                    "{sample.testimonial}"
                                  </blockquote>
                                  <cite className="text-white/80 text-xs font-medium">- {sample.studentName}</cite>
                                </div>
                              </div>
                            )}
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                )
              })}
            </div>
          </div>
          
          {/* Instructions */}
          <div className="absolute bottom-4 left-1/2 -translate-x-1/2 text-center">
            <p className="text-xs text-slate-400">
              Drag to spin • Hover left/right for navigation arrows • Click to browse gallery
            </p>
          </div>
        </div>
        
        {/* Enhanced Modal with Full Testimonial */}
        {selectedSample && (
          <div className="fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4 z-50" onClick={() => setSelectedSample(null)}>
            <div className="bg-background rounded-2xl border border-border max-w-4xl w-full max-h-[90vh] overflow-y-auto shadow-2xl" onClick={(e) => e.stopPropagation()}>
              <div className="p-8">
                <div className="flex items-start justify-between mb-8">
                  <div>
                    <div className="flex items-center gap-3 mb-2">
                      <h3 className="text-3xl font-bold text-foreground">{selectedSample.title}</h3>
                      {selectedSample.isFeatured && (
                        <div className="flex items-center gap-1">
                          <Star className="h-4 w-4 text-yellow-500 fill-current" />
                          <span className="text-xs bg-primary text-primary-foreground px-2 py-1 rounded-full font-medium">Featured</span>
                        </div>
                      )}
                    </div>
                    <span className="text-sm bg-primary/10 text-primary px-3 py-1 rounded-full font-medium">
                      {selectedSample.category}
                    </span>
                  </div>
                  <button
                    onClick={() => setSelectedSample(null)}
                    className="p-2 hover:bg-muted rounded-lg transition-colors"
                  >
                    <X className="h-6 w-6" />
                  </button>
                </div>
                
                {/* Screenshot/Image Carousel Area */}
                <div className="aspect-video bg-gradient-to-br from-muted/30 to-muted/60 rounded-xl mb-8 relative">
                  <div className="absolute inset-0 flex items-center justify-center text-muted-foreground">
                    <div className="text-center">
                      <div className="text-8xl mb-4">🖥️</div>
                      <div className="text-xl font-medium">{selectedSample.category} Demo</div>
                      <div className="text-sm text-muted-foreground mt-2">Click "View Live Site" to see it in action</div>
                    </div>
                  </div>
                </div>
                
                {/* Full Student Testimonial */}
                <div className="bg-primary/5 border-l-4 border-primary rounded-r-lg p-6 mb-8">
                  <div className="flex items-start gap-4">
                    <div className="w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0">
                      <span className="text-primary font-bold text-lg">{selectedSample.studentName.charAt(0)}</span>
                    </div>
                    <div>
                      <blockquote className="text-foreground italic text-lg mb-3 leading-relaxed">
                        "{selectedSample.testimonial}"
                      </blockquote>
                      <cite className="text-primary font-semibold">— {selectedSample.studentName}</cite>
                      <p className="text-xs text-muted-foreground mt-1">Web Launch Academy Graduate</p>
                    </div>
                  </div>
                </div>
                
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
                  <div>
                    <h4 className="font-semibold text-foreground mb-4 text-lg">Key Features Built</h4>
                    <ul className="space-y-3">
                      {selectedSample.features.map((feature: string, index: number) => (
                        <li key={index} className="flex items-center gap-3 text-muted-foreground">
                          <span className="text-green-500 font-bold">✓</span>
                          <span>{feature}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                  <div>
                    <h4 className="font-semibold text-foreground mb-4 text-lg">Technology Stack</h4>
                    <p className="text-muted-foreground mb-4 leading-relaxed">{selectedSample.tech}</p>
                    <p className="text-muted-foreground leading-relaxed">{selectedSample.description}</p>
                  </div>
                </div>
                
                <div className="flex flex-col sm:flex-row gap-4">
                  <Button asChild size="lg" className="flex-1">
                    <Link href={selectedSample.liveUrl} className="flex items-center gap-2">
                      <ExternalLink className="h-4 w-4" />
                      View Live Site
                    </Link>
                  </Button>
                  <Button 
                    variant="outline" 
                    size="lg" 
                    className="flex-1 bg-accent hover:bg-accent/90 text-accent-foreground border-accent" 
                    onClick={() => {
                      setSelectedSample(null)
                      document.getElementById('build-with-you')?.scrollIntoView({ behavior: 'smooth' })
                    }}
                  >
                    Start Your Website Journey
                  </Button>
                </div>
              </div>
            </div>
          </div>
        )}
        
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mt-16">
          <p className="text-muted-foreground mb-6">
            Every site is built with modern, professional web technologies
          </p>
          <div className="flex flex-wrap justify-center gap-4 text-sm mb-8">
            <span className="bg-background border border-border px-3 py-2 rounded-full">React</span>
            <span className="bg-background border border-border px-3 py-2 rounded-full">Next.js</span>
            <span className="bg-background border border-border px-3 py-2 rounded-full">TypeScript</span>
            <span className="bg-background border border-border px-3 py-2 rounded-full">Tailwind CSS</span>
            <span className="bg-background border border-border px-3 py-2 rounded-full">Vercel</span>
            <span className="bg-background border border-border px-3 py-2 rounded-full">Prisma</span>
          </div>
          
          <Button 
            size="lg" 
            onClick={() => document.getElementById('build-with-you')?.scrollIntoView({ behavior: 'smooth' })}
            className="bg-accent hover:bg-accent/90 text-accent-foreground"
          >
            Build Your Own Website
          </Button>
          </div>
        </div>
      </div>
    </section>
  )
}